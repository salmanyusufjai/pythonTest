from google.cloud import bigquery
import pandas as pd
import os

client = bigquery.Client()

def get_columns(table_id):
    table = client.get_table(table_id)
    return [schema.name for schema in table.schema]

def compare_tables(table_a: str, table_b: str, join_key: str = 'companynumber', output_folder: str = 'comparison_output'):
    os.makedirs(output_folder, exist_ok=True)

    columns_a = get_columns(table_a)
    columns_b = get_columns(table_b)

    # Case-insensitive column match
    columns_a_lower = {col.lower(): col for col in columns_a}
    columns_b_lower = {col.lower(): col for col in columns_b}

    common_keys = set(columns_a_lower.keys()) & set(columns_b_lower.keys())
    common_columns = [(columns_a_lower[k], columns_b_lower[k]) for k in common_keys]

    print("\n=== Comparing Tables ===")
    print(f"Common columns: {len(common_columns)}")

    select_expr = [f"A.{join_key}"] + [
        f"A.{col_a} AS A_{col_a}, B.{col_b} AS B_{col_b}"
        for col_a, col_b in common_columns
    ]
    query = f"""
        SELECT {', '.join(select_expr)}
        FROM `{table_a}` A
        JOIN `{table_b}` B
        ON A.{join_key} = B.{join_key}
    """
    df = client.query(query).to_dataframe()

    summary = []

    for col_a, col_b in common_columns:
        a_col = f"A_{col_a}"
        b_col = f"B_{col_b}"

        df[a_col] = df[a_col].astype(str).str.upper().str.strip().fillna('_')
        df[b_col] = df[b_col].astype(str).str.upper().str.strip().fillna('_')

        total = df.shape[0]
        match = (df[a_col] == df[b_col])
        diff_df = df[~match]

        # Counts for C/M/Other/_
        def count_transition(a_val, b_val):
            return ((df[a_col] == a_val) & (df[b_col] == b_val)).sum()

        summary.append({
            "Column": col_a,
            "Total Rows": total,
            "Matches": match.sum(),
            "Diffs": diff_df.shape[0],
            "Câ†’C": count_transition("C", "C"),
            "Mâ†’M": count_transition("M", "M"),
            "Câ†’M": count_transition("C", "M"),
            "Mâ†’C": count_transition("M", "C"),
            "Anyâ†’C": (df[b_col] == "C").sum(),
            "Anyâ†’M": (df[b_col] == "M").sum(),
            "â†’_": (df[b_col] == "_").sum(),
            "_â†’": (df[a_col] == "_").sum(),
            "Otherâ†’Other": df[
                ~df[a_col].isin(["C", "M", "_"]) &
                ~df[b_col].isin(["C", "M", "_"])
            ].shape[0],
        })

        # Examples for Mâ†”C and Other mismatches
        cm_diff = diff_df[
            ((diff_df[a_col] == 'C') & (diff_df[b_col] == 'M')) |
            ((diff_df[a_col] == 'M') & (diff_df[b_col] == 'C'))
        ]
        other_diff = diff_df[
            ~diff_df[a_col].isin(['C', 'M', '_']) &
            ~diff_df[b_col].isin(['C', 'M', '_'])
        ]
        underscore_diff = diff_df[
            (diff_df[a_col] == '_') | (diff_df[b_col] == '_')
        ]

        cm_diff[[join_key, a_col, b_col]].head(3).to_csv(f"{output_folder}/examples_cm_{col_a}.csv", index=False)
        other_diff[[join_key, a_col, b_col]].head(3).to_csv(f"{output_folder}/examples_other_{col_a}.csv", index=False)
        underscore_diff[[join_key, a_col, b_col]].head(3).to_csv(f"{output_folder}/examples_underscore_{col_a}.csv", index=False)

        print(f"âœ… Compared: {col_a}")

    pd.DataFrame(summary).to_csv(f"{output_folder}/comparison_summary.csv", index=False)
    print("\nðŸŽ‰ All reports saved to:", output_folder)

# Run it!
if __name__ == "__main__":
    compare_tables(
        table_a="your_project.dataset.table_a",
        table_b="your_project.dataset.table_b",
        join_key="companynumber"
    )
