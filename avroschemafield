import json

def extract_field_names(schema, prefix=''):
    field_names = []

    if "type" in schema:
        # Handle nested types
        if isinstance(schema["type"], list):
            for item in schema["type"]:
                field_names += extract_field_names(item, prefix)
        elif schema["type"] == "record" and "fields" in schema:
            for field in schema["fields"]:
                field_name = prefix + field["name"]
                field_names.append(field_name)
                if isinstance(field["type"], dict):
                    # Handle nested fields
                    field_names += extract_field_names(field["type"], field_name + '.')
        elif schema["type"] == "array" and "items" in schema:
            field_names += extract_field_names(schema["items"], prefix)
        elif schema["type"] == "map" and "values" in schema:
            field_names += extract_field_names(schema["values"], prefix)

    return field_names

# Open the Avro schema JSON file
with open('your_schema.json', 'r') as schema_file:
    schema_data = json.load(schema_file)

# Extract all field names
field_names = extract_field_names(schema_data)

# Print the list of field names
for field_name in field_names:
    print(field_name)
